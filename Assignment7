- [ ] 6.11.2 Programming Exercises, Questions 5 & 6 (submit these as one source code file)


- [ ] Upload your assignment to GitHub
- [ ] Email james.wilson@rccd.edu with the url to the source code on GitHub	

***  20 points (10 points for each question) ***

;64-bit Boolean calculator 5 & 6

ExitProcess proto
WriteString proto
WriteInt64 proto
ReadInt64 proto
Crlf proto
XYAND proto
XYOR proto
NOTX proto
XXORY proto
.data

displayX BYTE "Enter a value for X: ",0
displayY BYTE "Enter a value for Y: ",0
display0 BYTE "Your results are: ",0
display1 BYTE "1. x AND y",0
display2 BYTE "2. x OR y",0
display3 BYTE "3. NOT x",0
display4 BYTE "4. x XOR y",0
display5 BYTE "5. Exit program",0
answer BYTE 0
X BYTE 0
Y BYTE 0
result BYTE 2
.code
main proc

mov rdx, OFFSET [displayX]
call WriteString
call Crlf
call ReadInt64
mov X, al
mov rdx, OFFSET [displayY]
call WriteString
call Crlf
call ReadInt64
mov Y, al
	
mov rdx, OFFSET [display1]
call WriteString
call Crlf
mov rdx, OFFSET [display2]
call WriteString
call Crlf
mov rdx, OFFSET [display3]
call WriteString
call Crlf
mov rdx, OFFSET [display4]
call WriteString
call Crlf
mov rdx, OFFSET [display5]
call WriteString
call Crlf

LP1:

call ReadInt64
call Crlf
mov answer, al

cmp al,1
je op1
cmp al,2
je op2
cmp al,3
je op3
cmp al,4
je op4
cmp al,5
je Exit
Loop LP1
op1: call XYAND
call Crlf
jmp LP1
op2: call XYOR
call Crlf
jmp LP1
op3: call NOTX
call Crlf
jmp LP1
op4: call XXORY
call Crlf
jmp LP1

Exit: call ReadInt64
call ExitProcess
main endp



XYAND proc 

mov bl,X
and bl,Y
mov result, bl
mov rdx, 0
mov rdx, offset [display0]
call WriteString
mov al, result
call WriteInt64

ret
XYAND endp

XYOR proc

mov bl,X
or bl,Y
mov result, bl
mov rdx, 0
mov rdx, offset [display0]
call WriteString
mov al, result
call WriteInt64

ret
XYOR endp

NOTX proc

mov bl,X
not bl
mov result, bl
mov rdx, 0
mov rdx, offset [display0]
call WriteString
mov al, result
call WriteInt64

ret

NOTX endp

XXORY proc 

mov bl,X
xor bl,Y
mov result, bl
mov rdx, 0
mov rdx, offset [display0]
call WriteString
mov al, result
call WriteInt64

ret
XXORY endp
end
