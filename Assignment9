 Briefly describe the concept of "Stack Frame" (1 through 5 points depending on quality of the answer)
Hint: https://en.wikipedia.org/wiki/X86_calling_conventions

 Briefly describe the concept of a "Calling Convention" (1 through 5 points depending on quality of the answer)
 Why do the book examples always start functions with "push ebp" and "mov ebp,esp" (2 points)
 What is the x64 equivalent to "push ebp" and "mov ebp,esp)" (2 points)
 What are the differences between "Microsoft x64 calling convention" and "System V AMD64 ABI calling convention" (2 points)
Hint: https://en.wikipedia.org/wiki/X86_calling_conventions

void myFunction(int a, int b, int c, int d, int e, int f)  {
  //some code here
}
 Upon entry to myFunction (above), what does the stack look like when using Microsoft x64 calling convention? (3 points)

Hint: https://docs.microsoft.com/en-us/cpp/build/parameter-passing

 Upon entry to myFunction (above), what does the stack look like when using stdcall convention (3 points)

Hint: https://en.wikipedia.org/wiki/X86_calling_conventions

 Upload your assignment to GitHub

 Email james.wilson@rccd.edu with the url to the source code on GitHub

*** 22 points ***

1. A Stack Frame is a collection of information used to manage temporary variables. Stack Frames help in recursive functions in subprograms and subroutines. 
 
2. Calling Convention is a low-level scheme for subroutines in which can receive parameters, return values, and tasks preparing for a function call, restoring the enviroment.

3. Gives access for additional information to be passed through the stack.
 
4. "push rbp" and "mov rbp,rsp".
 
5. The x64 calling convention uses a four register fast-call calling by default. "Space is allocated on the stack as a shadow store for callees to save those registers." (Source: Microsoft "Overview of x64 Calling Convention)
   The System V AMD64 ABI calling convention the standard among /unix and Unix-like systems.The first six integers or pointer arguements are passed through a bunch of different registers. Compared to microsofts x64, additional arguements are passed through the stack.

6. The stack would have a smallest to largest number order with a return address of 32 byte and the last parameter.

7. The stack would be in reverse order.
